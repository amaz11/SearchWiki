{"version":3,"sources":["components/list.js","components/counter.js","App.js","reportWebVitals.js","index.js"],"names":["List","result","map","item","className","href","pageid","title","dangerouslySetInnerHTML","__html","snippet","Counter","useState","value","setValue","setResult","useEffect","timeId","setTimeout","a","axios","get","params","action","list","origin","format","srsearch","data","query","search","clearTimeout","type","placeholder","onChange","e","target","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAgBeA,EAdF,SAAC,GAWV,OAXqB,EAAVC,OAEiBC,KAAI,SAACC,GAE7B,OACI,sBAAwBC,UAAU,aAAlC,UACI,6BAAI,mBAAGC,KAHL,kCAGiBF,EAAKG,OAAQF,UAAU,SAAtC,SAAgDD,EAAKI,UACzD,mBAAGC,wBAAyB,CAACC,OAAQN,EAAKO,aAFpCP,EAAKG,YCyCZK,EA5CC,WAMZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOX,EAAP,KAAec,EAAf,KAwBA,OAtBAC,qBAAU,WACN,IAAIC,EAAS,KAgBb,OAfGJ,IACCI,EAASC,WAAU,sBAAC,8BAAAC,EAAA,sEACAC,IAAMC,IAAI,qCAAsC,CAChEC,OAAO,CACHC,OAAQ,QACRC,KAAM,SACNC,OAAQ,IACRC,OAAQ,OACRC,SAAUd,KAPE,gBACbe,EADa,EACbA,KASPb,EAAUa,EAAKC,MAAMC,QAVD,2CAWlB,MAGC,WACHC,aAAad,MAElB,CAACJ,IAGA,gCAGI,sBAAMT,UAAU,UAAhB,SACI,uBAAO4B,KAAK,OAAOnB,MAAOA,EAAOoB,YAAY,kBAAkBC,SAAU,SAACC,GAAD,OAAKrB,EAASqB,EAAEC,OAAOvB,YAGpG,cAAC,EAAD,CAAMZ,OAAQA,QCrCpBoC,G,kKAwBJ,WACA,OACE,qBAAKjC,UAAU,uCAAf,SAGS,qBAAKA,UAAU,oBAAf,SACA,cAAC,EAAD,Y,GA9BKkC,cAsCHD,IChCAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51340c49.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst List = ({result})=>{\r\n    \r\n    const rerenderList = result.map((item)=>{\r\n        let url = 'https://en.wikipedia.org?curid='\r\n        return(\r\n            <div key={item.pageid}  className='ui segment'>\r\n                <h1><a href={url + item.pageid} className=\"header\">{item.title}</a></h1>\r\n                <p dangerouslySetInnerHTML={{__html: item.snippet}}></p>\r\n            </div>\r\n        )\r\n    })\r\n    return rerenderList\r\n}\r\n\r\nexport default List","import React,{useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./list\";\r\n\r\nconst Counter = ()=>{\r\n    // const [click, setClick] = useState(0)\r\n    // const hendelerClick =()=>{\r\n    //     setClick(click+1)\r\n    // }\r\n\r\n    const [value, setValue] = useState('')\r\n    const [result, setResult] = useState([])\r\n\r\n    useEffect(() => {\r\n        let timeId = null\r\n        if(value){\r\n            timeId = setTimeout(async()=>{\r\n            const {data} =await axios.get('https://en.wikipedia.org/w/api.php', {\r\n                params:{\r\n                    action: 'query',\r\n                    list: 'search',\r\n                    origin: '*',\r\n                    format: 'json',\r\n                    srsearch: value\r\n                }\r\n            })\r\n            setResult(data.query.search)\r\n            },1000) \r\n            \r\n        }\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        };\r\n    }, [value]);\r\n\r\n    return(\r\n        <div>\r\n            {/* <h1>Yousr Click {click}</h1>\r\n            <button onClick={hendelerClick}>Click Me</button> */}\r\n            <form className=\"ui form\">\r\n                <input type=\"text\" value={value} placeholder='Search For Wiki' onChange={(e)=>setValue(e.target.value)} />\r\n            </form>\r\n\r\n            <List result={result} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter","import React,{Component} from 'react';\n// import Todo from './components/todo';\n// import Form from './components/form'\nimport Counter from './components/counter';\nimport './App.css';\n\nclass App extends Component {\n  // constructor(){\n  //   super()\n  //   this.state = {\n  //     message : 'Welcome To Todo',\n  //     counter: 0\n  //   }\n  //   this.timer=null\n  // }\n  \n  // state = {\n  //       message : 'Welcome To Todo',\n  //       counter: 0\n  //     }\n  // componentDidMount(){\n  //   this.timer = setInterval(() => {\n  //     this.setState({ counter: this.state.counter+1})\n  //   }, 1000); \n  // }\n\n  // componentWillUnmount(){\n  //   clearInterval(this.timer)\n  // }\n\n  render(){\n  return (\n    <div className=\"App ui grid container center aligned\">\n             {/* <Todo message={this.state.message} counter={this.state.counter} /> */}\n             {/* <Form /> */}\n             <div className=\"column eight wide\">\n             <Counter />\n             </div>\n            \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}